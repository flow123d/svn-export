Popis instalace PETSc a podpurnych a navazujicich softwaru na cluster Hydra

1) Instalace Intel compilatoru

- Hydra je zalozena na procesorech Opteron (64bit AMD procesory), podle benchmarku
  nalezenych na internetu:
http://www.principledtechnologies.com/Clients/Reports/Intel/CompComp.pdf
http://www.cse.scitech.ac.uk/disco/Benchmarks/Opteron_compilers.pdf
http://www.polyhedron.com/pb05-linux-f90bench_AMD0html

... jsem usoudil, ze nejlepsi prekladace pro Opteron jsou PathScale, nicmene nejlepsi
volne dostupne jsou prekladace od Intelu. Kazdopadne jsou o dost rychlejsi nez GCC 3.x
ktere jsou na hydre predinstalovane a dnes jiz vazne dost zastarale.

- instaloval jsem Intel C/C++ 9.1.052 a Intel Fortran 9.1.043:
  stahnout nekomercni verzi zdarma z www.intel.com, rozbalit, spustit instalacni skript,
  zadat seriove cislo, ktere prijde mailem

- pridat do .bash_profile:
export ICLIB="-L$HOME/intel/cc/9.1.052/lib -L$HOME/intel/fc/9.1.043/lib"
export DYLD_LIBRARY_PATH="$HOME/intel/cc/9.1.052/lib:$HOME/intel/fc/9.1.043/lib"
export LD_LIBRARY_PATH="$HOME/intel/cc/9.1.052/lib:$HOME/intel/fc/9.1.043/lib"

a do PATH pridat cestu k binarkam  

2) Instalace MPICH

- kvuli nekompatibilite knihoven GCC s knihovnemi ICC, nebylo mozne pouzit MPI implementaci 
  LAM, ktera je na hydre instalovana. Prelozil jsem tedy implementaci MPICH2 pomoci ICC.
  Pripouziti novejsi verze ICC 10.1.008 vsak nebylo mozno MPICH2 prelozit kvuli jiste chybe v
  prekladaci, proto jsem pouzil starsi verzi prekladace.

- instalace:
  stahnout z http://www.mcs.anl.gov/research/projects/mpich2/
  rozbalit
  ./configure CC=/home/jan.brezina/intel/cc/9.1.052/bin/icc \
          FC=/home/jan.brezina/intel/fc/9.1.043/bin/ifort \
          --prefix=/home/jan.brezina/local/mpich2/

  make
  make install
  
- konfigurace
  pro vlastni potrebu si v .bash_profile nastavim:

  export MPICHLIB="-L/home/jan.brezina/local/mpich2/lib"
  export MPICHINC="-I/home/jan.brezina/local/mpich2/include"

  plus do promenne PATH pridat cestu k binarkam
  
  v domovskem adresari vytvorit soubor .mpd.conf s obsahem
  secretword=blabla
  
  nastavit mu prava:
  chmod 600 .mpd.conf

3) Parmetis
  
  stahnout z
  http://glaros.dtc.umn.edu/gkhome/metis/parmetis/download

  rozbalit do adr. ParMetis, v nem  vytvorit podadresare 'lib' a 'include',
  v souboru ParMetis/Makefile.in nastavit compiler icc a linker mpicc, Makefile.in pak vypada takto:
----------------------------------------
# Which compiler to use
CC = icc

# What  optimization level to use
OPTFLAGS = -O3

# Include directories for the compiler
INCDIR = ${MPICHINC}

# What options to be used by the compiler
COPTIONS =

# Which loader to use
LD = mpicc

# In which directories to look for any additional libraries
LIBDIR = ${MPICHLIB} ${ICLIB}

# What additional libraries to link the programs with (eg., -lmpi)
#XTRALIBS = -lefence
#XTRALIBS = -ldmalloc
#XTRALIBS = -lmpi

# What archiving to use
AR = ar rv

# What to use for indexing the archive
#RANLIB = ranlib
RANLIB = ar -ts

VERNUM =
-----------------------------------------

dale prelozit:
ParMetis> make

testovat pomoci programu ptest v adresari Graphs:

ParMetis/Graphs> mpd&
PerMetis/Graphs> mpirun -np 4 ptest rotor.graph

kopirovat parmetis.h a metis.h z adresaru METISLib a ParMETISLib do adresare include
ParMetis> cp METISLib/metis.h ParMETISLib/parmetis.h include
kopirovat libparmetis.a a libmetis.a do adresare lib
ParMetis> cp libparmetis.a libmetis.a lib

4) ACML - knihovna od AMD, ktera implementuje BLAS 1,2,3 
   mela by byt optimalni implementaci na Opteronech
   stahnout
     acml-4-0-1-ifort-64bit.tgz
   z adresy: 
     http://developer.amd.com/tools/acml/downloads/Pages/default.aspx
   rozbalit
   spustit 
     install-acml-4.0.1-ifort-64bit.sh

5) PETSc
stahnout z:
http://www-unix.mcs.anl.gov/petsc/petsc-2/download/index.html

rozbalit
nastavit promenou PETSC_DIR v .bash_profile
v nem stvorit konfiguracni skripty pro ladici a produkcni verzi:

--------------------- config-dbg
#!/bin/bash
export PETSC_DIR=/home/jan.brezina/local/petsc/petsc-2.3.3-p8
./config/configure.py \
--PETSC_ARCH=linux-icc-dbg \
--with_debugging=1 \
--with-shared \
--with-mpi-dir=$HOME/local/mpich2 \
--with-blas-lapack-dir=$HOME/local/acml/ifort64/lib \
--with-parmetis-dir=$HOME/local/parmetis/ParMetis-3.1 \
--with-f90-header=${PETSC_DIR}/include/f90impl/f90_intel8.h \
--with-f90-source=${PETSC_DIR}/src/sys/src/f90/f90_intel8.c \
--with-cc=icc --with-cxx=icc --with-fc=ifort --with-ld=mpicc \
--with-gnu-compilers=no  \
--CFLAGS_O="-O0 -g" --FFLAGS_O="-O0 -g" \
--CFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}" \
--FFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}" \
--LDFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}"
----------------------------------

---------------------- config-opt
#!/bin/bash
export PETSC_DIR=/home/jan.brezina/local/petsc/petsc-2.3.3-p8
./config/configure.py \
--PETSC_ARCH=linux-icc-opt \
--with_debugging=0 \
--with-shared \
--with-mpi-dir=$HOME/local/mpich2 \
--with-blas-lapack-dir=$HOME/local/acml/ifort64/lib \
--with-parmetis-dir=$HOME/local/parmetis/ParMetis-3.1 \
--with-f90-header=${PETSC_DIR}/include/f90impl/f90_intel8.h \
--with-f90-source=${PETSC_DIR}/src/sys/src/f90/f90_intel8.c \
--with-cc=icc --with-cxx=icc --with-fc=ifort --with-ld=mpicc \
--with-gnu-compilers=no  \
--CFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}" \
--FFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}" \
--LDFLAGS="${ICLIB} -Wl,-rpath,${DYLD_LIBRARY_PATH}"\
--CFAGS_O="-O3 -ip -xW -no-prec-div" --FFLAGS_O="-O3 -ipo -xW -no-prec-div"  
#--CFAGS="-O3 -ip -xP -no-prec-div" --FFLAGS="-O3 -ipo -xP -no-prec-div"  
#--CFAGS="-O3 -ip -xO -no-prec-div" --FFLAGS="-O3 -ipo -xO -no-prec-div"  
------------------------------------

postupne spustit:
./config-dbg
make
make tests all

./config-opt
make
make tests all

============================================================

podstatne radky v .bash_profile:

export ICLIB="-L$HOME/intel/cc/9.1.052/lib -L$HOME/intel/fc/9.1.043/lib"
export DYLD_LIBRARY_PATH="$HOME/intel/cc/9.1.052/lib:$HOME/intel/fc/9.1.043/lib"
export LD_LIBRARY_PATH="$HOME/intel/cc/9.1.052/lib:$HOME/intel/fc/9.1.043/lib"
export MPICHLIB="-L/home/jan.brezina/local/mpich2/lib"
export MPICHINC="-I/home/jan.brezina/local/mpich2/include"

Intel_PATH=$HOME/intel/cc/9.1.052/bin:$HOME/intel/fc/9.1.043/bin
PATH=/$HOME/local/mpich2/bin:$Intel_PATH:$PATH:$HOME/bin
export PATH

export PETSC_DIR=$HOME/local/petsc/petsc-2.3.3-p8

=============================================================
namety na vylepseni hydry:

- novejsi prekladace, alespon GCC 4.3
- benchmark prekladacu v nasem prostredi
- ? Intel prekladace
- ACML
- pristup do cizich home - kvuli predavani dat i pro inspiraci 
  konfigurace ... 
- pristup k informaci o procesorech a ulohach z prikazove radky a ne jen pres 
  lokalni webove rozhrani



