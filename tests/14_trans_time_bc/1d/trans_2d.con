{
  problem = {
    TYPE = "SequentialCoupling", 
    description = "Test - 1D transport", 
    mesh = {
      mesh_file = "./cavity-20-u.msh"
    }, 

    primary_equation = {
      TYPE = "Steady_MH", 

      bulk_data = [
        { rid = 1,
          cond_anisothropy = 0.1
        }
      ],
    
      bc_data = [
        {
          region = "IMPLICIT BOUNDARY",
          bc_type = "dirichlet",
          bc_pressure = {TYPE="FieldFormula", value="1-x"}
        }
      ],

      n_schurs = 2, 
      output = {
        output_stream = {
          REF = "/system/output_streams/0"
        }, 
        pressure_p0 = "flow_output_stream", 
        pressure_p1 = "flow_output_stream", 
        velocity_p0 = "flow_output_stream"
      }, 
      solver = {
        TYPE = "Petsc", 
        accuracy = 1e-07 
      }
    }, 
 
    secondary_equation = {
      TYPE = "AdvectionDiffusion_DG", 

      bulk_data = [
        { rid = 1,
          init_conc = { TYPE="FieldFormula", value=
          #"0.5+0.1*sin(10*x)" }
          "if(x>=0.1&x<0.5,1,0.5)" }
        }
      ],

      bc_data = [
        {
          region = "IMPLICIT BOUNDARY",
          bc_conc=0.5
        }
      ],

      output = {
        mobile_p0 = "transport_output_stream", 
        output_stream = {
          REF = "/system/output_streams/1"
        }, 
        save_step = 1.0e-2
      }, 

      substances = [
        "A"
      ], 
      dg_penalty=1e0,
      d_m=0e-6,
      solver = {
        TYPE = "Petsc", 
        accuracy = 1e-07
      },
      time = {
	end_time = 10.0, 
	init_dt = 1.0e-1
      }
    }
  }, 

  system = {
    output_streams = [
      {
        file = "./test2d.pvd", 
        format = {
          TYPE = "vtk", 
          variant = "ascii"
        }, 
        name = "flow_output_stream"
      }, 
      {
        file = "./trans2d-ie-dm0e0-dt1e-1.pvd", 
        format = {
          TYPE = {
            REF = "/system/output_streams/0/format/TYPE"
          }, 
          variant = "ascii"
        }, 
        name = "transport_output_stream"
      }
    ]
  }
}